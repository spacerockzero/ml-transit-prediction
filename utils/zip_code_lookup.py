"""
ZIP Code to USPS Zone Lookup Utility
Based on official USPS zone chart for realistic shipping data generation
"""

def zip_to_zone(zip_code):
    """Convert ZIP code to USPS zone based on official zone chart"""
    zip_int = int(str(zip_code)[:3])  # Use first 3 digits
    
    # ZIP code to zone mapping based on USPS zone chart
    zip_zones = {
        # Zone 8
        (5, 139): 8, (170, 176): 8, (178, 212): 8, (214, 214): 8, (216, 225): 8,
        (230, 238): 8, (278, 279): 8, (283, 285): 8, (294, 294): 8, (320, 322): 8,
        (327, 342): 8, (346, 347): 8, (349, 349): 8, (967, 969): 8, (995, 997): 8,
        
        # Zone 7
        (140, 169): 7, (177, 177): 7, (215, 215): 7, (226, 229): 7, (239, 268): 7,
        (270, 277): 7, (280, 282): 7, (286, 293): 7, (295, 319): 7, (323, 326): 7,
        (344, 344): 7, (350, 352): 7, (355, 368): 7, (373, 374): 7, (376, 379): 7,
        (385, 385): 7, (395, 395): 7, (398, 399): 7, (403, 418): 7, (425, 426): 7,
        (430, 459): 7, (470, 470): 7, (480, 487): 7, (492, 492): 7,
        (700, 701): 7, (998, 998): 7,
        
        # Zone 6
        (354, 354): 6, (369, 372): 6, (375, 375): 6, (380, 384): 6, (386, 394): 6,
        (396, 397): 6, (400, 402): 6, (420, 424): 6, (460, 469): 6,
        (471, 479): 6, (488, 491): 6, (493, 499): 6, (520, 524): 6, (526, 528): 6,
        (530, 532): 6, (534, 535): 6, (537, 539): 6, (541, 549): 6, (556, 559): 6,
        (600, 620): 6, (622, 631): 6, (633, 639): 6, (648, 648): 6, (650, 658): 6,
        (703, 708): 6, (710, 714): 6, (716, 726): 6, (728, 729): 6, (733, 733): 6,
        (749, 749): 6, (755, 759): 6, (770, 789): 6, (999, 999): 6,
        # Adding missing ranges for better coverage
        (300, 309): 6, (980, 989): 6, (330, 339): 6,
        
        # Zone 5
        (500, 516): 5, (525, 525): 5, (540, 540): 5, (550, 551): 5, (553, 555): 5,
        (560, 567): 5, (570, 576): 5, (640, 641): 5, (644, 647): 5, (649, 649): 5,
        (660, 662): 5, (664, 676): 5, (678, 681): 5, (683, 689): 5, (727, 727): 5,
        (730, 731): 5, (734, 741): 5, (743, 748): 5, (750, 754): 5, (760, 769): 5,
        (790, 799): 5, (880, 882): 5, (885, 885): 5, (919, 921): 5, (931, 931): 5,
        (934, 934): 5, (949, 949): 5, (954, 955): 5, (970, 974): 5, (980, 986): 5,
        
        # Zone 4
        (577, 577): 4, (590, 599): 4, (677, 677): 4, (690, 693): 4, (800, 813): 4,
        (820, 822): 4, (827, 828): 4, (835, 835): 4, (838, 838): 4, (850, 850): 4,
        (852, 853): 4, (855, 857): 4, (859, 860): 4, (863, 865): 4, (870, 875): 4,
        (877, 879): 4, (883, 884): 4, (889, 891): 4, (894, 895): 4, (897, 897): 4,
        (900, 908): 4, (910, 918): 4, (922, 928): 4, (930, 930): 4, (932, 933): 4,
        (935, 948): 4, (950, 953): 4, (956, 966): 4, (975, 978): 4, (988, 994): 4,
        
        # Zone 3
        (814, 816): 3, (823, 826): 3, (833, 833): 3, (836, 837): 3, (893, 893): 3,
        (898, 898): 3, (979, 979): 3,
        
        # Zone 2
        (829, 832): 2, (834, 834): 2, (840, 847): 2
    }
    
    # Find the zone for the given ZIP code
    for (start, end), zone in zip_zones.items():
        if start <= zip_int <= end:
            return zone
    
    # Default to zone 5 if not found (middle zone)
    return 5


def test_zip_lookup():
    """Test the ZIP code lookup function with known examples"""
    test_cases = [
        ('10001', 'NYC', 8),
        ('90210', 'Beverly Hills, CA', 4),
        ('60601', 'Chicago, IL', 6),
        ('30301', 'Atlanta, GA', 6),
        ('75201', 'Dallas, TX', 5),
        ('80202', 'Denver, CO', 4),
        ('98101', 'Seattle, WA', 4),
        ('33101', 'Miami, FL', 7),
        ('85001', 'Phoenix, AZ', 4),
        ('50301', 'Des Moines, IA', 5),
    ]
    
    print("ZIP Code Zone Lookup Test:")
    print("ZIP Code | Location | Zone")
    print("-" * 30)
    
    for zip_code, location, expected_zone in test_cases:
        actual_zone = zip_to_zone(zip_code)
        status = "✓" if actual_zone == expected_zone else "✗"
        print(f"{zip_code} | {location:<15} | {actual_zone} {status}")


if __name__ == "__main__":
    test_zip_lookup()